/*
 * communication.h
 *
 *  Created on: 19.11.2022
 *      Author: pasik
 */

#ifndef COMMUNICATION_COMMUNICATION_H_
#define COMMUNICATION_COMMUNICATION_H_

/*
 * float sind 4 Byte groÃŸ auf dem STM32
 * USB Paket hat 64 Byte Speicherplatz
 * Aktuelle Messwerte (U,I) sind 9 stk. -> 9 * 4 = 36 Byte
 */

//UEB Statuses


typedef struct
{
  uint8_t	status;				//the actual status of the UEB: 0 = INIT; 1 = RUN; 2 = STOP; 3 = NOPARAM; 4 = ERROR...
  uint8_t	errorstatus;		//see main.c error defines
  float_t	vccvoltage;			//
  float_t	outvoltage;			//
  float_t	frequency;			//
  uint8_t	thirdharmonic;		//
  uint8_t	softstart;			//
  float_t	softstartduration;	//
  float_t	maxcurrent;			//
  uint32_t	averagenum;			//
  float_t	pwmfrequency;		//
} UEB_StatusType;
/*
float 			amperePerDigits = 0.0007575757; //(0.05mV/Digits)/(66mV/A)=0.0007575757A/Digit
float 			bufferSum_IHB1 = 0;
float 			bufferSum_IHB2 = 0;
float 			bufferSum_IHB3 = 0;
float 			bufferAverage_IHB1 = 0;
float 			bufferAverage_IHB2 = 0;
float 			bufferAverage_IHB3 = 0;
float 			bufferCalibrated1 = -33900;
float 			bufferCalibrated2 = -33900;
float 			bufferCalibrated3 = -33900;
float 			current_IHB1 = 0;
float 			current_IHB2 = 0;
float 			current_IHB3 = 0;
*/
typedef struct
{
  uint8_t	status;				//the actual status of the UEB: 0 = INIT; 1 = RUN; 2 = STOP; 3 = NOPARAM; 4 = ERROR...
  float_t	bufferSum_IHB1;
  float_t	bufferSum_IHB2;
  float_t	bufferSum_IHB3;
  float_t	bufferAverage_IHB1;
  float_t	bufferAverage_IHB2;
  float_t	bufferAverage_IHB3;
  float_t	current_IHB1;
  float_t	current_IHB2;
  float_t	current_IHB3;
  int32_t	rotvelo;
} UEB_MeasuresType;

//Commands to get and set Status of the UEB
static const char UEBREADY[] = "?";								//returns the actual state of the UEB
static const char GETMEASURES[] = "UEB_start_measure";			//starts the measure and pushes all data to the serial port
static const char STOPMEASURES[] = "UEB_stop_measure";			//stops pushing data to the serial port

//Command to get Parameters of the UEB
static const char GETPARAMETERS[] = "UEB_get_params";

//Commands to set Parameters on the UEB
static const char SETPARAMETERS[] = "UEB_start_set";			//
static const char SAVEPARAMETERS[] = "UEB_save_params";
static const char SETVCCVOLTAGE[] = "UEB_set_Vcc:";				//The value must be in
static const char SETOUTVOLTAGE[] = "UEB_set_Vout";

static const char SETFREQUENCY[] = "UEB_set_freq:";
static const char SETROTATION[] = "UEB_set_rot:";
static const char SETTHIRDHARMONIC[] = "UEB_set_thirdharm:";
static const char SETSOFTSTART[] = "UEB_set_softstart:";
static const char SETSOFTSTARTDURATION[] = "UEB_set_softdur:";
static const char SETMAXCURRENT[] = "UEB_set_maxCurr:";
static const char SETNUMAVERAGED[] = "UEB_set_averagednum:";



#endif /* COMMUNICATION_COMMUNICATION_H_ */
